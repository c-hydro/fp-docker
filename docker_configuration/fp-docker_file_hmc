# start from base -- builder
FROM ubuntu:18.04 as builder

# label(s)
LABEL maintainer="Fabio Delogu"
LABEL email="fabio.delogu@cimafoundation.org"
LABEL version="1.0.2"
LABEL release_date="2020/04/19"

# change default shell (from sh to bash)
SHELL ["/bin/bash", "-c"]

# install system-wide deps 
RUN apt-get update && apt-get install -y \
	git \
	gfortran \
	gcc \
	m4 \
	g++ \
	make \
	mc \
	curl \
	build-essential \
	wget \
	cmake \
	libcurl4-openssl-dev \
	openjdk-8-jdk \
	bash-completion

# set user and workdir check
ENV user fp
RUN useradd -m -d /home/${user} -s /bin/bash ${user} && chown -R ${user} /home/${user}
WORKDIR /home/${user}
USER ${user}
RUN pwd

#RUN useradd -m -p fp -s /bin/bash fp
#WORKDIR /home/fp/
#USER fp
#RUN pwd

# set environment folder(s)
ENV fp_folder_entrypoint /home/fp/fp_entrypoint/
ENV fp_folder_libs_installer /home/fp/fp_envs/fp_libs_installer/
ENV fp_folder_libs_system /home/fp/fp_envs/fp_libs_system/
ENV fp_folder_libs_python /home/fp/fp_envs/fp_libs_python/
ENV fp_folder_package_hmc /home/fp/fp_package/fp_hmc/
ENV fp_folder_mount /home/fp/fp_mount/

# set environment filename(s)
ENV fp_file_env_system fp_env_system
ENV fp_file_env_python fp_env_python

# create folder
RUN mkdir -p ${fp_folder_libs_installer}
RUN mkdir -p ${fp_folder_package_hmc}
RUN mkdir -p ${fp_folder_entrypoint}
RUN mkdir -p ${fp_folder_mount}

# get fp envs from github repository
RUN git clone https://3a99fb49454e54c836f69cca7b1c6034c32f798a:x-oauth-basic@github.com/c-hydro/fp-envs.git --branch v1.5.3 --single-branch /tmp/fp-envs
# copy files from tmp to container folder(s)
RUN cp -r /tmp/fp-envs/. ${fp_folder_libs_installer} 

# start installer script for system libraries
WORKDIR ${fp_folder_libs_installer}
RUN pwd
RUN ./setup_fp_env_system.sh ${fp_folder_libs_system} ${fp_file_env_system}

# start installer script for hmc libraries
WORKDIR ${fp_folder_libs_installer}
RUN pwd
RUN ./setup_fp_env_hmc.sh ${fp_folder_libs_system} ${fp_file_env_system}

# start installer script for python libraries
WORKDIR ${fp_folder_libs_installer}
RUN pwd
RUN ./setup_fp_env_python.sh ${fp_folder_libs_python} ${fp_file_env_python}

# set environmental variable(s) appending in .bashrc
RUN echo "source ${fp_folder_libs_system}/${fp_file_env_system}" >> /home/fp/.bashrc
RUN echo "source ${fp_folder_libs_python}/${fp_file_env_python}" >> /home/fp/.bashrc
RUN echo "export PYTHONPATH="'${PYTHONPATH}'":/${fp_folder_package_hmc}" >> /home/fp/.bashrc
# set environmental variable(s) appending in .profile
RUN echo "source ${fp_folder_libs_system}/${fp_file_env_system}" >> /home/fp/.profile
RUN echo "source ${fp_folder_libs_python}/${fp_file_env_python}" >> /home/fp/.profile
RUN echo "export PYTHONPATH="'${PYTHONPATH}'":/${fp_folder_package_hmc}" >> /home/fp/.profile

# get hmc python package from github repository
WORKDIR ${fp_folder_entrypoint}
RUN git clone https://3a99fb49454e54c836f69cca7b1c6034c32f798a:x-oauth-basic@github.com/c-hydro/hmc.git --branch v1.8.6 --single-branch /tmp/hmc
# copy files from tmp to container folder(s)
RUN cp -r /tmp/hmc/. ${fp_folder_package_hmc} 

# get hmc python package from github repository
RUN git clone https://3a99fb49454e54c836f69cca7b1c6034c32f798a:x-oauth-basic@github.com/c-hydro/fp-docker.git --branch v1.0.4 --single-branch /tmp/fp-docker
# copy files from tmp to container folder(s)
RUN cp -r /tmp/fp-docker/docker_entrypoint/. ${fp_folder_entrypoint} 

# prepare share folder(s) to mount external repos
ENV fp_folder_mount_static_gridded /home/fp/fp_mount/datasets_hmc/static/gridded/
ENV fp_folder_mount_static_point /home/fp/fp_mount/datasets_hmc/static/point/
ENV fp_folder_mount_dyn_source /home/fp/fp_mount/datasets_hmc/dynamic_source/
ENV fp_folder_mount_dyn_destination /home/fp/fp_mount/datasets_hmc/dynamic_destination/
ENV fp_folder_mount_dyn_restart /home/fp/fp_mount/datasets_hmc/dynamic_restart/
RUN mkdir -p ${fp_folder_mount_static_gridded}
RUN mkdir -p ${fp_folder_mount_static_point}
RUN mkdir -p ${fp_folder_mount_dyn_source}
RUN mkdir -p ${fp_folder_mount_dyn_destination}
RUN mkdir -p ${fp_folder_mount_dyn_restart}

# set entrypoint
WORKDIR ${fp_folder_entrypoint}
ENTRYPOINT ${fp_folder_entrypoint}"fp-docker_entrypoint_app_interface_hmc.sh"
CMD []
